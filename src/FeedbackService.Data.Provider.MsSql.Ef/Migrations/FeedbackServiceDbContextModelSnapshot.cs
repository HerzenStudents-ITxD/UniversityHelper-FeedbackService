// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversityHelper.FeedbackService.Data.Provider.MsSql.Ef;

#nullable disable

namespace UniversityHelper.FeedbackService.Data.Provider.MsSql.Ef.Migrations
{
    [DbContext(typeof(FeedbackServiceDbContext))]
    partial class FeedbackServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UniversityHelper.FeedbackService.Models.Db.DbFeedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("SenderEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks", (string)null);
                });

            modelBuilder.Entity("UniversityHelper.FeedbackService.Models.Db.DbFeedbackType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FeedbackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FeedbackId");

                    b.HasIndex("TypeId");

                    b.ToTable("FeedbackTypes", (string)null);
                });

            modelBuilder.Entity("UniversityHelper.FeedbackService.Models.Db.DbImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FeedbackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FeedbackId");

                    b.ToTable("Images", (string)null);
                });

            modelBuilder.Entity("UniversityHelper.FeedbackService.Models.Db.DbType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Types", (string)null);
                });

            modelBuilder.Entity("UniversityHelper.FeedbackService.Models.Db.DbFeedbackType", b =>
                {
                    b.HasOne("UniversityHelper.FeedbackService.Models.Db.DbFeedback", "Feedback")
                        .WithMany("FeedbackTypes")
                        .HasForeignKey("FeedbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityHelper.FeedbackService.Models.Db.DbType", "Type")
                        .WithMany("FeedbackTypes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feedback");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("UniversityHelper.FeedbackService.Models.Db.DbImage", b =>
                {
                    b.HasOne("UniversityHelper.FeedbackService.Models.Db.DbFeedback", "Feedback")
                        .WithMany("Images")
                        .HasForeignKey("FeedbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feedback");
                });

            modelBuilder.Entity("UniversityHelper.FeedbackService.Models.Db.DbFeedback", b =>
                {
                    b.Navigation("FeedbackTypes");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("UniversityHelper.FeedbackService.Models.Db.DbType", b =>
                {
                    b.Navigation("FeedbackTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
